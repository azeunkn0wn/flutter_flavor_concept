import 'package:flutter/material.dart';
import 'package:flutter_flavor_concept/utils/colors.dart';

final ThemeData meetYodaThemeLight = ThemeData(
    applyElevationOverlayColor: false,
    primaryColor: primaryColor,
    primaryColorDark: const Color.fromARGB(255, 170, 99, 0),
    primaryColorLight: primaryColor,
    brightness: Brightness.light,
    iconTheme: const IconThemeData(color: primaryColor),
    appBarTheme: const AppBarTheme(
        foregroundColor: Colors.white,
        elevation: 0.0,
        backgroundColor: primaryColor,
        centerTitle: true,
        titleTextStyle: TextStyle(
          color: Colors.white,
          fontSize: 20,
        )),
    textTheme: const TextTheme(
      titleMedium:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor),
      titleSmall:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor),
      displayMedium: TextStyle(fontFamily: "lato-medium", color: Colors.white),
      displayLarge: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      displaySmall: TextStyle(
        fontFamily: "lato-medium",
        color: primaryColor,
        fontSize: 18.0,
        fontWeight: FontWeight.bold,
      ),
      bodyLarge: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      bodyMedium: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      bodySmall:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor),
      labelLarge: TextStyle(
          fontFamily: "lato-medium",
          color: Colors.white,
          fontWeight: FontWeight.w600),
    ),
    buttonTheme: const ButtonThemeData(
        padding: EdgeInsets.symmetric(vertical: 20, horizontal: 16),
        alignedDropdown: false,
        height: 36,
        layoutBehavior: ButtonBarLayoutBehavior.padded,
        minWidth: 88,
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(4))),
        colorScheme: ColorScheme(
            brightness: Brightness.light,
            background: Color(0xffffffff),
            error: Color(0xffb00020),
            errorContainer: Color(0xffb00020),
            inversePrimary: Color(0xffffffff),
            inverseSurface: Color(0xff000000),
            onBackground: Color(0xff000000),
            onError: Color(0xffffffff),
            onErrorContainer: Color(0xffffffff),
            onInverseSurface: Color(0xffffffff),
            onPrimary: Color(0xff000000),
            onPrimaryContainer: Color(0xffffffff),
            onSecondary: Color(0xff000000),
            onSecondaryContainer: Color(0xff000000),
            onSurface: Color(0xff000000),
            onSurfaceVariant: Color(0xff000000),
            onTertiary: Color(0xff000000),
            onTertiaryContainer: Color(0xff000000),
            outline: Color(0xff000000),
            primary: Color(0xff1a7dba),
            primaryContainer: Color(0xff6200ee),
            secondary: accentColor,
            secondaryContainer: Color(0xff03dac6),
            shadow: Color(0xff000000),
            surface: Color(0xffffffff),
            surfaceTint: Color(0xff6200ee),
            surfaceVariant: Color(0xffffffff),
            tertiary: Color(0xff03dac6),
            tertiaryContainer: Color(0xff03dac6))),
    canvasColor: const Color(0xfffafafa),
    cardColor: const Color(0xffffffff),
    dialogBackgroundColor: Colors.white,
    disabledColor: const Color(0x550a0a0a),
    dividerColor: const Color.fromARGB(255, 165, 165, 165),
    elevatedButtonTheme: ElevatedButtonThemeData(
        style: ButtonStyle(
      padding: MaterialStateProperty.all<EdgeInsetsGeometry>(
          const EdgeInsets.symmetric(vertical: 20)),
      elevation: MaterialStateProperty.all<double>(2),
      backgroundColor: MaterialStateProperty.all<Color>(accentColor),
      foregroundColor:
          MaterialStateProperty.all<Color>(const Color(0xffffffff)),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x3d000000)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    floatingActionButtonTheme:
        const FloatingActionButtonThemeData(foregroundColor: Color(0xfffafafb)),
    focusColor: const Color(0x1f000000),
    highlightColor: const Color(0x66bcbcbc),
    hintColor: const Color(0x99a8a8a8),
    hoverColor: const Color(0x0a000000),
    indicatorColor: primaryColor,
    inputDecorationTheme: const InputDecorationTheme(
        alignLabelWithHint: false,
        filled: false,
        floatingLabelAlignment: FloatingLabelAlignment.start,
        floatingLabelBehavior: FloatingLabelBehavior.auto,
        isCollapsed: false,
        isDense: false),
    materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
    outlinedButtonTheme: OutlinedButtonThemeData(
        style: ButtonStyle(
      elevation: MaterialStateProperty.all<double>(0),
      foregroundColor: MaterialStateProperty.all<Color>(accentColor),
      backgroundColor: MaterialStateProperty.all<Color>(Colors.transparent),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x1f1a7dba)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    textButtonTheme: TextButtonThemeData(
        style: ButtonStyle(
      elevation: MaterialStateProperty.all<double>(0),
      foregroundColor: MaterialStateProperty.all<Color>(accentColor),
      backgroundColor: MaterialStateProperty.all<Color>(Colors.transparent),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x1f1a7dba)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    scaffoldBackgroundColor: scaffoldColor,
    secondaryHeaderColor: primaryColor,
    shadowColor: const Color(0xff000000),
    splashColor: const Color(0x66c8c8c8),
    unselectedWidgetColor: const Color(0x8a000000),
    useMaterial3: false,
    visualDensity: VisualDensity.compact,
    bottomAppBarTheme: const BottomAppBarTheme(color: Color(0xffffffff)),
    colorScheme: const ColorScheme(
            brightness: Brightness.light,
            background: Color(0xffffffff),
            error: Color(0xffb00020),
            errorContainer: Color(0xffb00020),
            inversePrimary: Color(0xffffffff),
            inverseSurface: Color(0xff000000),
            onBackground: Color(0xff000000),
            onError: Color(0xffffffff),
            onErrorContainer: Color(0xffffffff),
            onInverseSurface: Color(0xffffffff),
            onPrimary: Color(0xff000000),
            onPrimaryContainer: Color(0xffffffff),
            onSecondary: Color(0xff000000),
            onSecondaryContainer: Color(0xff000000),
            onSurface: Color(0xff000000),
            onSurfaceVariant: Color(0xff000000),
            onTertiary: Color(0xff000000),
            onTertiaryContainer: Color(0xff000000),
            outline: Color(0xff000000),
            primary: primaryColor,
            primaryContainer: primaryColor,
            secondary: accentColor,
            secondaryContainer: Color(0xff03dac6),
            shadow: Color(0xff000000),
            surface: Color(0xffffffff),
            surfaceTint: primaryColor,
            surfaceVariant: Color(0xffffffff),
            tertiary: Color(0xff03dac6),
            tertiaryContainer: Color(0xff03dac6))
        .copyWith(background: primaryColor)
        .copyWith(error: const Color(0xffd32f2f)));

final ThemeData myvcmoThemeLight = ThemeData(
    applyElevationOverlayColor: false,
    primaryColor: primaryColor2,
    primaryColorDark: const Color.fromARGB(255, 170, 99, 0),
    primaryColorLight: primaryColor2,
    brightness: Brightness.light,
    iconTheme: const IconThemeData(color: primaryColor2),
    appBarTheme: const AppBarTheme(
        foregroundColor: Colors.white,
        elevation: 0.0,
        backgroundColor: primaryColor2,
        centerTitle: true,
        titleTextStyle: TextStyle(
          color: Colors.white,
          fontSize: 20,
        )),
    textTheme: const TextTheme(
      titleMedium:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor2),
      titleSmall:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor2),
      displayMedium: TextStyle(fontFamily: "lato-medium", color: Colors.white),
      displayLarge: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      displaySmall: TextStyle(
        fontFamily: "lato-medium",
        color: primaryColor2,
        fontSize: 18.0,
        fontWeight: FontWeight.bold,
      ),
      bodyLarge: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      bodyMedium: TextStyle(fontFamily: "lato-medium", color: Colors.black),
      bodySmall:
          TextStyle(fontFamily: "lato-medium", color: secondaryTextColor2),
      labelLarge: TextStyle(
          fontFamily: "lato-medium",
          color: Colors.white,
          fontWeight: FontWeight.w600),
    ),
    buttonTheme: const ButtonThemeData(
        padding: EdgeInsets.symmetric(vertical: 20, horizontal: 16),
        alignedDropdown: false,
        height: 36,
        layoutBehavior: ButtonBarLayoutBehavior.padded,
        minWidth: 88,
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(4))),
        colorScheme: ColorScheme(
            brightness: Brightness.light,
            background: Color(0xffffffff),
            error: Color(0xffb00020),
            errorContainer: Color(0xffb00020),
            inversePrimary: Color(0xffffffff),
            inverseSurface: Color(0xff000000),
            onBackground: Color(0xff000000),
            onError: Color(0xffffffff),
            onErrorContainer: Color(0xffffffff),
            onInverseSurface: Color(0xffffffff),
            onPrimary: Color(0xff000000),
            onPrimaryContainer: Color(0xffffffff),
            onSecondary: Color(0xff000000),
            onSecondaryContainer: Color(0xff000000),
            onSurface: Color(0xff000000),
            onSurfaceVariant: Color(0xff000000),
            onTertiary: Color(0xff000000),
            onTertiaryContainer: Color(0xff000000),
            outline: Color(0xff000000),
            primary: Color(0xff1a7dba),
            primaryContainer: Color(0xff6200ee),
            secondary: accentColor2,
            secondaryContainer: Color(0xff03dac6),
            shadow: Color(0xff000000),
            surface: Color(0xffffffff),
            surfaceTint: Color(0xff6200ee),
            surfaceVariant: Color(0xffffffff),
            tertiary: Color(0xff03dac6),
            tertiaryContainer: Color(0xff03dac6))),
    canvasColor: const Color(0xfffafafa),
    cardColor: const Color(0xffffffff),
    dialogBackgroundColor: Colors.white,
    disabledColor: const Color(0x550a0a0a),
    dividerColor: const Color.fromARGB(255, 165, 165, 165),
    elevatedButtonTheme: ElevatedButtonThemeData(
        style: ButtonStyle(
      padding: MaterialStateProperty.all<EdgeInsetsGeometry>(
          const EdgeInsets.symmetric(vertical: 20)),
      elevation: MaterialStateProperty.all<double>(2),
      backgroundColor: MaterialStateProperty.all<Color>(accentColor2),
      foregroundColor:
          MaterialStateProperty.all<Color>(const Color(0xffffffff)),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x3d000000)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    floatingActionButtonTheme:
        const FloatingActionButtonThemeData(foregroundColor: Color(0xfffafafb)),
    focusColor: const Color(0x1f000000),
    highlightColor: const Color(0x66bcbcbc),
    hintColor: const Color(0x99a8a8a8),
    hoverColor: const Color(0x0a000000),
    indicatorColor: primaryColor2,
    inputDecorationTheme: const InputDecorationTheme(
        alignLabelWithHint: false,
        filled: false,
        floatingLabelAlignment: FloatingLabelAlignment.start,
        floatingLabelBehavior: FloatingLabelBehavior.auto,
        isCollapsed: false,
        isDense: false),
    materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
    outlinedButtonTheme: OutlinedButtonThemeData(
        style: ButtonStyle(
      elevation: MaterialStateProperty.all<double>(0),
      foregroundColor: MaterialStateProperty.all<Color>(accentColor2),
      backgroundColor: MaterialStateProperty.all<Color>(Colors.transparent),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x1f1a7dba)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    textButtonTheme: TextButtonThemeData(
        style: ButtonStyle(
      elevation: MaterialStateProperty.all<double>(0),
      foregroundColor: MaterialStateProperty.all<Color>(accentColor2),
      backgroundColor: MaterialStateProperty.all<Color>(Colors.transparent),
      overlayColor: MaterialStateProperty.all<Color>(const Color(0x1f1a7dba)),
      minimumSize: MaterialStateProperty.all<Size>(const Size(64, 36)),
    )),
    scaffoldBackgroundColor: scaffoldColor,
    secondaryHeaderColor: primaryColor2,
    shadowColor: const Color(0xff000000),
    splashColor: const Color(0x66c8c8c8),
    unselectedWidgetColor: const Color(0x8a000000),
    useMaterial3: false,
    visualDensity: VisualDensity.compact,
    bottomAppBarTheme: const BottomAppBarTheme(color: Color(0xffffffff)),
    colorScheme: const ColorScheme(
            brightness: Brightness.light,
            background: Color(0xffffffff),
            error: Color(0xffb00020),
            errorContainer: Color(0xffb00020),
            inversePrimary: Color(0xffffffff),
            inverseSurface: Color(0xff000000),
            onBackground: Color(0xff000000),
            onError: Color(0xffffffff),
            onErrorContainer: Color(0xffffffff),
            onInverseSurface: Color(0xffffffff),
            onPrimary: Color(0xff000000),
            onPrimaryContainer: Color(0xffffffff),
            onSecondary: Color(0xff000000),
            onSecondaryContainer: Color(0xff000000),
            onSurface: Color(0xff000000),
            onSurfaceVariant: Color(0xff000000),
            onTertiary: Color(0xff000000),
            onTertiaryContainer: Color(0xff000000),
            outline: Color(0xff000000),
            primary: primaryColor2,
            primaryContainer: primaryColor2,
            secondary: accentColor2,
            secondaryContainer: Color(0xff03dac6),
            shadow: Color(0xff000000),
            surface: Color(0xffffffff),
            surfaceTint: primaryColor,
            surfaceVariant: Color(0xffffffff),
            tertiary: Color(0xff03dac6),
            tertiaryContainer: Color(0xff03dac6))
        .copyWith(background: primaryColor)
        .copyWith(error: const Color(0xffd32f2f)));

ThemeData defaultThemData = meetYodaThemeLight;
